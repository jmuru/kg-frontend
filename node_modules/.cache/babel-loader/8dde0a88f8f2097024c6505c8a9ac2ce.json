{"ast":null,"code":"var _jsxFileName = \"/Users/josephmuruguru/go/src/github.com/kat-generator/KGF/src/components/generate.js\";\nimport React from 'react';\nimport { getAccessory, getKatData, getPalette } from '../util/dao';\nimport { applyColorPalette, getBackgroundColorMap, redrawFromMatrix, mergeLayers } from '../util/generator-helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Generator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      Face: {},\n      Accessories: {},\n      Background: {},\n      Merged: null,\n      ImgData: null,\n      ActiveAccessories: []\n    };\n  }\n\n  _redrawAccessory(placement) {\n    const editCoord = applyColorPalette(this.state.Accessories[placement][\"accessory\"][\"accessory\"], this.state.Accessories[placement][\"palette\"][\"palette\"]);\n    let combo = mergeLayers(this.state.Merged, editCoord);\n    redrawFromMatrix(combo, this.canvasRef.current.getContext(\"2d\"));\n    let imgData = this.canvasRef.current.toDataURL(\"image/png\");\n    this.setState({\n      Merged: combo,\n      ImgData: imgData\n    });\n  }\n\n  _drawInitialKat() {\n    const face = applyColorPalette(this.state.Face[\"face\"][\"Face\"], this.state.Face[\"palette\"][\"palette\"]);\n    const background = getBackgroundColorMap(this.state.Background[\"background\"][\"Background\"]);\n    const aGroup = {};\n    Object.keys(this.state.Accessories).forEach(placement => {\n      if (this.state.Accessories[placement]) {\n        aGroup[placement] = applyColorPalette(this.state.Accessories[placement][\"accessory\"][\"accessory\"], this.state.Accessories[placement][\"palette\"][\"palette\"]);\n      }\n    });\n    let base = mergeLayers(background, face);\n    let ags = Object.values(aGroup);\n    let agk = Object.keys(aGroup);\n    let agsIndex = Math.floor(Math.random() * ags.length);\n    ags.splice(agsIndex, 1);\n    agk.splice(agsIndex, 1);\n    let a = ags.reduce((acc, curr) => {\n      return mergeLayers(acc, curr);\n    });\n    let combo = mergeLayers(base, a);\n    redrawFromMatrix(combo, this.canvasRef.current.getContext(\"2d\"));\n    let imgData = this.canvasRef.current.toDataURL(\"image/png\");\n    console.log(\"converted image data\", imgData);\n    this.setState({\n      ActiveAccessories: agk,\n      Merged: combo,\n      ImgData: imgData\n    });\n  }\n\n  _generateKat(e) {\n    e.preventDefault();\n    const data = getKatData();\n    data.then(r => {\n      console.log(\"data in promise\", r);\n      this.setState({\n        Face: r[\"face\"],\n        Accessories: r[\"accessories\"],\n        Background: r[\"background\"]\n      });\n\n      this._drawInitialKat();\n    });\n  }\n\n  _generateAccessoryPalette(type, placement) {\n    const data = getPalette(type);\n    data.then(r => {\n      console.log('response', r[\"palette\"]);\n      console.log('response', r[\"type\"]);\n      let ac = this.state.Accessories;\n      ac[placement][\"palette\"][\"palette\"] = r[\"palette\"];\n      this.setState({\n        Accessories: ac\n      });\n\n      this._redrawAccessory(placement);\n    });\n  }\n\n  _generateNewAccessory(placement) {\n    const data = getAccessory(placement);\n    data.then(r => {\n      console.log('gna response', r['accessory']);\n      let ac = this.state.Accessories; // ac[placement][\"accessory\"][\"accessory\"] = r[\"accessory\"];\n    });\n  }\n\n  _generateCanvas() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: this.canvasRef,\n        width: 240,\n        height: 240\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  }\n\n  _handleAccessoryPaletteChange(e, placment) {\n    e.preventDefault();\n\n    this._generateAccessoryPalette(\"accessory\", placment);\n  }\n\n  _generateAPBtns() {\n    let activeAccessories = this.state.ActiveAccessories;\n    let btnRender = activeAccessories.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => this._handleAccessoryPaletteChange(e, item),\n      children: `Generate new ${item} accessory palette`\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this));\n    return btnRender;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => this._generateKat(e),\n        children: \"Generate Kat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), this._generateCanvas(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), this.state.Merged && this.state.ImgData ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.state.ImgData,\n        download: true,\n        children: \"Download Kat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 60\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), this.state.Merged && this.state.ImgData ? this._generateAPBtns() : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/KGF/src/components/generate.js"],"names":["React","getAccessory","getKatData","getPalette","applyColorPalette","getBackgroundColorMap","redrawFromMatrix","mergeLayers","Generator","Component","constructor","props","canvasRef","createRef","state","Face","Accessories","Background","Merged","ImgData","ActiveAccessories","_redrawAccessory","placement","editCoord","combo","current","getContext","imgData","toDataURL","setState","_drawInitialKat","face","background","aGroup","Object","keys","forEach","base","ags","values","agk","agsIndex","Math","floor","random","length","splice","a","reduce","acc","curr","console","log","_generateKat","e","preventDefault","data","then","r","_generateAccessoryPalette","type","ac","_generateNewAccessory","_generateCanvas","_handleAccessoryPaletteChange","placment","_generateAPBtns","activeAccessories","btnRender","map","item","index","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {getAccessory, getKatData, getPalette} from '../util/dao';\nimport {applyColorPalette, getBackgroundColorMap, redrawFromMatrix, mergeLayers} from '../util/generator-helper';\n\nexport class Generator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.state = {Face: {}, Accessories: {}, Background: {}, Merged: null, ImgData: null, ActiveAccessories: []}\n    }\n\n\n    _redrawAccessory (placement) {\n        const editCoord = applyColorPalette(this.state.Accessories[placement][\"accessory\"][\"accessory\"],this.state.Accessories[placement][\"palette\"][\"palette\"] )\n        let combo = mergeLayers(this.state.Merged, editCoord)\n        redrawFromMatrix(combo, this.canvasRef.current.getContext(\"2d\"));\n        let imgData = this.canvasRef.current.toDataURL(\"image/png\");\n        this.setState({\n            Merged: combo,\n            ImgData: imgData\n        })\n    }\n\n    _drawInitialKat () {\n        const face = applyColorPalette(this.state.Face[\"face\"][\"Face\"],this.state.Face[\"palette\"][\"palette\"])\n        const background = getBackgroundColorMap(this.state.Background[\"background\"][\"Background\"])\n        const aGroup = {}\n        Object.keys(this.state.Accessories).forEach(placement => {\n            if (this.state.Accessories[placement]) {\n                aGroup[placement] = applyColorPalette(this.state.Accessories[placement][\"accessory\"][\"accessory\"],this.state.Accessories[placement][\"palette\"][\"palette\"] )\n            }\n        });\n        let base = mergeLayers(background, face);\n        let ags = Object.values(aGroup);\n        let agk = Object.keys(aGroup);\n        let agsIndex = Math.floor(Math.random() * ags.length);\n        ags.splice(agsIndex, 1);\n        agk.splice(agsIndex, 1);\n        let a = ags.reduce((acc, curr) => {\n            return mergeLayers(acc, curr);\n        })\n        let combo = mergeLayers(base, a)\n        redrawFromMatrix(combo, this.canvasRef.current.getContext(\"2d\"));\n\n        let imgData = this.canvasRef.current.toDataURL(\"image/png\");\n        console.log(\"converted image data\", imgData);\n        this.setState({\n            ActiveAccessories: agk,\n            Merged: combo,\n            ImgData: imgData\n        })\n    }\n\n    _generateKat (e) {\n        e.preventDefault();\n        const data = getKatData();\n        data.then(r => {\n            console.log(\"data in promise\", r);\n            this.setState({\n                Face: r[\"face\"],\n                Accessories: r[\"accessories\"],\n                Background: r[\"background\"]\n            });\n            this._drawInitialKat();\n        })\n    }\n\n    _generateAccessoryPalette (type, placement) {\n        const data = getPalette(type);\n        data.then(r => {\n            console.log('response', r[\"palette\"]);\n            console.log('response', r[\"type\"]);\n            let ac = this.state.Accessories;\n            ac[placement][\"palette\"][\"palette\"] = r[\"palette\"];\n            this.setState({\n                Accessories: ac,\n            });\n            this._redrawAccessory(placement);\n        })\n    }\n\n    _generateNewAccessory (placement) {\n        const data = getAccessory(placement);\n        data.then(r => {\n            console.log('gna response', r['accessory']);\n            let ac = this.state.Accessories;\n            // ac[placement][\"accessory\"][\"accessory\"] = r[\"accessory\"];\n        });\n    }\n\n    _generateCanvas() {\n        return (\n            <div>\n                <canvas ref={this.canvasRef} width={240} height={240} />\n            </div>\n        )\n    }\n\n    _handleAccessoryPaletteChange(e, placment) {\n        e.preventDefault();\n        this._generateAccessoryPalette(\"accessory\", placment);\n    }\n\n    _generateAPBtns () {\n        let activeAccessories = this.state.ActiveAccessories;\n        let btnRender = activeAccessories.map((item, index) => (\n            <button key={index} onClick={(e) => this._handleAccessoryPaletteChange(e, item)}>{`Generate new ${item} accessory palette`}</button>\n        ));\n        return btnRender\n    }\n\n    render () {\n        return (\n            <div>\n                <button onClick={(e) => this._generateKat(e)}>Generate Kat</button>\n                {this._generateCanvas()}\n                <br/>\n                {this.state.Merged && this.state.ImgData ? <a href={this.state.ImgData} download>Download Kat</a> : null}\n                <br />\n                <br />\n                {this.state.Merged && this.state.ImgData ? this._generateAPBtns() : null}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}