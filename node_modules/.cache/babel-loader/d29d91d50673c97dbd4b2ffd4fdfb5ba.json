{"ast":null,"code":"export function findPosition(obj){var curleft=0,curtop=0;if(obj.offsetParent){do{curleft+=obj.offsetLeft;curtop+=obj.offsetTop;}while(obj=obj.offsetParent);return{x:curleft,y:curtop};}return undefined;}export function rgbToHex(r,g,b){if(r>255||g>255||b>255)throw\"Invalid color component\";return(r<<16|g<<8|b).toString(16);}function buildEmptyMatrix(height){var m=[];for(var i=0;i<height;i++){m.push([]);}return m;}export function recordMappingMatrix(canvas){var colorMatrix=buildEmptyMatrix(24);var context=canvas.getContext('2d');for(var height=0;height<24;height++){for(var index=0;index<24;index++){var w=index*10;var h=height*10;var p=context.getImageData(w,h,9,9).data;var hex=\"#\"+(\"000000\"+rgbToHex(p[0],p[1],p[2])).slice(-6);switch(hex){case\"#000000\":colorMatrix[height][index]=\"outline\";break;case\"#ffffff\":colorMatrix[height][index]=\"empty\";break;default:colorMatrix[height][index]=\"color_\".concat(hex);break;}}}return colorMatrix;}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/KGF/src/util/accessory-helpers.js"],"names":["findPosition","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","x","y","undefined","rgbToHex","r","g","b","toString","buildEmptyMatrix","height","m","i","push","recordMappingMatrix","canvas","colorMatrix","context","getContext","index","w","h","p","getImageData","data","hex","slice"],"mappings":"AAAA,MAAO,SAASA,CAAAA,YAAT,CAAsBC,GAAtB,CAA2B,CAC9B,GAAIC,CAAAA,OAAO,CAAG,CAAd,CAAiBC,MAAM,CAAG,CAA1B,CACA,GAAIF,GAAG,CAACG,YAAR,CAAsB,CAClB,EAAG,CACCF,OAAO,EAAID,GAAG,CAACI,UAAf,CACAF,MAAM,EAAIF,GAAG,CAACK,SAAd,CACH,CAHD,MAGSL,GAAG,CAAGA,GAAG,CAACG,YAHnB,EAIA,MAAO,CAAEG,CAAC,CAAEL,OAAL,CAAcM,CAAC,CAAEL,MAAjB,CAAP,CACH,CACD,MAAOM,CAAAA,SAAP,CACH,CAED,MAAO,SAAUC,CAAAA,QAAV,CAAmBC,CAAnB,CAAqBC,CAArB,CAAuBC,CAAvB,CAA0B,CAC7B,GAAIF,CAAC,CAAG,GAAJ,EAAWC,CAAC,CAAG,GAAf,EAAsBC,CAAC,CAAG,GAA9B,CACI,KAAM,yBAAN,CACJ,MAAO,CAAEF,CAAC,EAAI,EAAN,CAAaC,CAAC,EAAI,CAAlB,CAAuBC,CAAxB,EAA2BC,QAA3B,CAAoC,EAApC,CAAP,CACH,CAED,QAASC,CAAAA,gBAAT,CAA0BC,MAA1B,CAAkC,CAC9B,GAAIC,CAAAA,CAAC,CAAG,EAAR,CACA,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,MAApB,CAA4BE,CAAC,EAA7B,CAAiC,CAC7BD,CAAC,CAACE,IAAF,CAAO,EAAP,EACH,CACD,MAAOF,CAAAA,CAAP,CACH,CAED,MAAO,SAASG,CAAAA,mBAAT,CAA6BC,MAA7B,CAAqC,CACxC,GAAIC,CAAAA,WAAW,CAAGP,gBAAgB,CAAC,EAAD,CAAlC,CACA,GAAIQ,CAAAA,OAAO,CAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAd,CACA,IAAK,GAAIR,CAAAA,MAAM,CAAG,CAAlB,CAAqBA,MAAM,CAAG,EAA9B,CAAkCA,MAAM,EAAxC,CAA4C,CACxC,IAAK,GAAIS,CAAAA,KAAK,CAAG,CAAjB,CAAoBA,KAAK,CAAG,EAA5B,CAAgCA,KAAK,EAArC,CAAyC,CACrC,GAAIC,CAAAA,CAAC,CAAGD,KAAK,CAAG,EAAhB,CACA,GAAIE,CAAAA,CAAC,CAAGX,MAAM,CAAG,EAAjB,CAEA,GAAIY,CAAAA,CAAC,CAAGL,OAAO,CAACM,YAAR,CAAqBH,CAArB,CAAwBC,CAAxB,CAA2B,CAA3B,CAA8B,CAA9B,EAAiCG,IAAzC,CACA,GAAIC,CAAAA,GAAG,CAAG,IAAM,CAAC,SAAWrB,QAAQ,CAACkB,CAAC,CAAC,CAAD,CAAF,CAAOA,CAAC,CAAC,CAAD,CAAR,CAAaA,CAAC,CAAC,CAAD,CAAd,CAApB,EAAwCI,KAAxC,CAA8C,CAAC,CAA/C,CAAhB,CACA,OAAQD,GAAR,EACI,IAAK,SAAL,CACIT,WAAW,CAACN,MAAD,CAAX,CAAoBS,KAApB,EAA6B,SAA7B,CACA,MACJ,IAAK,SAAL,CACIH,WAAW,CAACN,MAAD,CAAX,CAAoBS,KAApB,EAA6B,OAA7B,CACA,MACJ,QACIH,WAAW,CAACN,MAAD,CAAX,CAAoBS,KAApB,kBAAsCM,GAAtC,EACA,MATR,CAWH,CACJ,CACD,MAAOT,CAAAA,WAAP,CACH","sourcesContent":["export function findPosition(obj) {\n    let curleft = 0, curtop = 0;\n    if (obj.offsetParent) {\n        do {\n            curleft += obj.offsetLeft;\n            curtop += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n        return { x: curleft, y: curtop };\n    }\n    return undefined;\n}\n\nexport function  rgbToHex(r,g,b) {\n    if (r > 255 || g > 255 || b > 255)\n        throw \"Invalid color component\";\n    return ((r << 16) | (g << 8) | b).toString(16);\n}\n\nfunction buildEmptyMatrix(height) {\n    var m = [];\n    for (var i = 0; i < height; i++) {\n        m.push([]);\n    }\n    return m\n}\n\nexport function recordMappingMatrix(canvas) {\n    let colorMatrix = buildEmptyMatrix(24);\n    let context = canvas.getContext('2d');\n    for (let height = 0; height < 24; height++ ){\n        for (let index = 0; index < 24; index++) {\n            let w = index * 10;\n            let h = height * 10\n\n            let p = context.getImageData(w, h, 9, 9).data;\n            let hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n            switch (hex) {\n                case \"#000000\":\n                    colorMatrix[height][index] = \"outline\";\n                    break;\n                case \"#ffffff\":\n                    colorMatrix[height][index] = \"empty\";\n                    break;\n                default:\n                    colorMatrix[height][index] = `color_${hex}`;\n                    break;\n            }\n        }\n    }\n    return colorMatrix;\n}"]},"metadata":{},"sourceType":"module"}