{"ast":null,"code":"var _jsxFileName = \"/Users/josephmuruguru/go/src/github.com/kat-generator/src/components/upload.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Uploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.imgRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      file: '',\n      imagePreviewUrl: ''\n    };\n  }\n\n  componentDidMount() {\n    const canvas = this.canvasRef;\n    const img = this.imgRef;\n    const ctx = canvas.current.getContext(\"2d\");\n\n    if (img) {\n      img.current.onload = () => {\n        ctx.drawImage(img, 0, 0);\n        ctx.font = \"40px Courier\"; // ctx.fillText(this.props.text, 210, 75)\n      };\n    }\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault(); // TODO: do something with -> this.state.file\n\n    console.log('handle uploading-', this.state.file);\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadend = () => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: this.imgRef,\n        height: 240,\n        width: 240,\n        alt: \"img\",\n        src: imagePreviewUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 30\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewComponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this._handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fileInput\",\n            type: \"file\",\n            onChange: e => this._handleImageChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submitButton\",\n            type: \"submit\",\n            onClick: e => this._handleSubmit(e),\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgPreview\",\n          children: $imagePreview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: 240,\n          height: 240\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewText\",\n        children: \"Please select an Image for Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 30\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewComponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this._handleSubmit(e),\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fileInput\",\n            type: \"file\",\n            onChange: e => this._handleImageChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"submitButton\",\n            type: \"submit\",\n            onClick: e => this._handleSubmit(e),\n            children: \"Upload Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgPreview\",\n          children: $imagePreview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.canvasRef,\n          width: 240,\n          height: 240\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/src/components/upload.js"],"names":["React","Uploader","Component","constructor","props","canvasRef","createRef","imgRef","state","file","imagePreviewUrl","componentDidMount","canvas","img","ctx","current","getContext","onload","drawImage","font","_handleSubmit","e","preventDefault","console","log","_handleImageChange","reader","FileReader","target","files","onloadend","setState","result","readAsDataURL","render","$imagePreview"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nexport class Uploader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.imgRef = React.createRef();\n        this.state = {file: '', imagePreviewUrl: ''};\n    }\n\n    componentDidMount() {\n        const canvas = this.canvasRef\n        const img = this.imgRef;\n        const ctx = canvas.current.getContext(\"2d\");\n\n        if (img) {\n            img.current.onload = () => {\n                ctx.drawImage(img, 0, 0)\n                ctx.font = \"40px Courier\"\n                // ctx.fillText(this.props.text, 210, 75)\n            }\n        }\n    }\n\n    _handleSubmit(e) {\n        e.preventDefault();\n        // TODO: do something with -> this.state.file\n        console.log('handle uploading-', this.state.file);\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n\n        reader.onloadend = () => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        let {imagePreviewUrl} = this.state;\n        let $imagePreview = null;\n        if (imagePreviewUrl) {\n            $imagePreview = (<img ref={this.imgRef} height={240} width={240} alt={\"img\"} src={imagePreviewUrl}/>);\n            return (\n                <div className=\"previewComponent\">\n                    <form onSubmit={(e) => this._handleSubmit(e)}>\n                        <input className=\"fileInput\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        <button className=\"submitButton\"\n                                type=\"submit\"\n                                onClick={(e) => this._handleSubmit(e)}>Upload Image\n                        </button>\n                    </form>\n                    <div className=\"imgPreview\">\n                        {$imagePreview}\n                    </div>\n                    <br/>\n                    <h4>Canvas</h4>\n                    <canvas ref={this.canvasRef} width={240} height={240} />\n                </div>\n            );\n        } else {\n            $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n            return (\n                <div className=\"previewComponent\">\n                    <form onSubmit={(e) => this._handleSubmit(e)}>\n                        <input className=\"fileInput\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                        <button className=\"submitButton\"\n                                type=\"submit\"\n                                onClick={(e) => this._handleSubmit(e)}>Upload Image\n                        </button>\n                    </form>\n                    <div className=\"imgPreview\">\n                        {$imagePreview}\n                    </div>\n                    <h4>Canvas</h4>\n                    <canvas ref={this.canvasRef} width={240} height={240} />\n                </div>\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}