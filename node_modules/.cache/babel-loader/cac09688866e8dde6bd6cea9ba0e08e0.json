{"ast":null,"code":"export function applyColorPalette(mapping, palette) {\n  let paletteMap = {};\n  paletteMap[\"empty\"] = \"#ffffff\";\n  paletteMap[\"outline\"] = \"#000000\";\n  let paletteCopy = palette;\n  let colorMapping = [];\n\n  for (let i = 0; i < 24; i++) {\n    const currentRow = mapping[i];\n    console.log(\"what is the current row\", currentRow);\n    let newRow = [];\n    currentRow.forEach(el => {\n      if (!paletteCopy.length && !paletteMap.hasOwnProperty(el)) {\n        paletteMap[el] = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n      }\n\n      if (paletteMap.hasOwnProperty(el)) {\n        newRow.push(paletteMap[el]);\n      } else {\n        let rIndex = getRandomColorFromPalette(paletteCopy);\n        paletteMap[el] = `#${paletteCopy[rIndex]}`;\n        paletteCopy.splice(rIndex, 1);\n        newRow.push(`#${paletteCopy[rIndex]}`);\n      }\n\n      console.log(\"what is new row\", newRow);\n      colorMapping.push(newRow);\n    });\n  }\n\n  console.log(\"what is the pallete map\", paletteMap);\n  return colorMapping;\n}\n\nfunction getRandomColorFromPalette(palette) {\n  let length = palette.length;\n  return Math.floor(Math.random() * length);\n}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/src/util/generator-helper.js"],"names":["applyColorPalette","mapping","palette","paletteMap","paletteCopy","colorMapping","i","currentRow","console","log","newRow","forEach","el","length","hasOwnProperty","Math","floor","random","toString","push","rIndex","getRandomColorFromPalette","splice"],"mappings":"AAAA,OAAO,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AAChD,MAAIC,UAAU,GAAG,EAAjB;AACAA,EAAAA,UAAU,CAAC,OAAD,CAAV,GAAsB,SAAtB;AACAA,EAAAA,UAAU,CAAC,SAAD,CAAV,GAAwB,SAAxB;AACA,MAAIC,WAAW,GAAGF,OAAlB;AACA,MAAIG,YAAY,GAAG,EAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,UAAMC,UAAU,GAAGN,OAAO,CAACK,CAAD,CAA1B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,UAAvC;AACA,QAAIG,MAAM,GAAG,EAAb;AACAH,IAAAA,UAAU,CAACI,OAAX,CAAmBC,EAAE,IAAI;AACrB,UAAI,CAACR,WAAW,CAACS,MAAb,IAAuB,CAACV,UAAU,CAACW,cAAX,CAA0BF,EAA1B,CAA5B,EAA2D;AACvDT,QAAAA,UAAU,CAACS,EAAD,CAAV,GAAkB,IAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,QAAzB,EAAmCC,QAAnC,CAA4C,EAA5C,CAAgD,EAArE;AACH;;AACD,UAAIf,UAAU,CAACW,cAAX,CAA0BF,EAA1B,CAAJ,EAAmC;AAC/BF,QAAAA,MAAM,CAACS,IAAP,CAAYhB,UAAU,CAACS,EAAD,CAAtB;AACH,OAFD,MAEO;AACH,YAAIQ,MAAM,GAAGC,yBAAyB,CAACjB,WAAD,CAAtC;AACAD,QAAAA,UAAU,CAACS,EAAD,CAAV,GAAkB,IAAGR,WAAW,CAACgB,MAAD,CAAS,EAAzC;AACAhB,QAAAA,WAAW,CAACkB,MAAZ,CAAmBF,MAAnB,EAA2B,CAA3B;AACAV,QAAAA,MAAM,CAACS,IAAP,CAAa,IAAGf,WAAW,CAACgB,MAAD,CAAS,EAApC;AACH;;AACDZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,MAA/B;AACAL,MAAAA,YAAY,CAACc,IAAb,CAAkBT,MAAlB;AACH,KAdD;AAeH;;AACDF,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCN,UAAvC;AACA,SAAOE,YAAP;AACH;;AAED,SAASgB,yBAAT,CAAmCnB,OAAnC,EAA4C;AACxC,MAAIW,MAAM,GAAGX,OAAO,CAACW,MAArB;AACA,SAAOE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,MAA3B,CAAP;AACH","sourcesContent":["export function applyColorPalette(mapping, palette) {\n    let paletteMap = {};\n    paletteMap[\"empty\"] = \"#ffffff\";\n    paletteMap[\"outline\"] = \"#000000\";\n    let paletteCopy = palette;\n    let colorMapping = [];\n    for (let i = 0; i < 24; i++) {\n        const currentRow = mapping[i];\n        console.log(\"what is the current row\", currentRow);\n        let newRow = [];\n        currentRow.forEach(el => {\n            if (!paletteCopy.length && !paletteMap.hasOwnProperty(el)) {\n                paletteMap[el] = `#${Math.floor(Math.random()*16777215).toString(16)}`;\n            }\n            if (paletteMap.hasOwnProperty(el)) {\n                newRow.push(paletteMap[el])\n            } else {\n                let rIndex = getRandomColorFromPalette(paletteCopy)\n                paletteMap[el] = `#${paletteCopy[rIndex]}`;\n                paletteCopy.splice(rIndex, 1);\n                newRow.push(`#${paletteCopy[rIndex]}`)\n            }\n            console.log(\"what is new row\", newRow);\n            colorMapping.push(newRow);\n        });\n    }\n    console.log(\"what is the pallete map\", paletteMap);\n    return colorMapping;\n}\n\nfunction getRandomColorFromPalette(palette) {\n    let length = palette.length;\n    return Math.floor(Math.random() * length);\n}"]},"metadata":{},"sourceType":"module"}