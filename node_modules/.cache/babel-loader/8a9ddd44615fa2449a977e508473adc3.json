{"ast":null,"code":"var _jsxFileName = \"/Users/josephmuruguru/go/src/github.com/kat-generator/src/components/upload.js\";\nimport React from \"react\";\nimport { findPosition, rgbToHex } from \"../util/accessory-helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Uploader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.imgRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      file: '',\n      imagePreviewUrl: '',\n      colorMap: new Set()\n    };\n  }\n\n  componentDidMount() {\n    const img = this.imgRef;\n  }\n\n  _generateCanvas() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseMove: e => this._handleFindPosition(e),\n        ref: this.canvasRef,\n        width: 240,\n        height: 240\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n  _handleSubmit(e) {\n    e.preventDefault(); // TODO: do something with -> this.state.file\n\n    console.log('handle uploading-', this.state.file);\n  }\n\n  _handleFindPosition(e) {\n    let canvas = this.canvasRef;\n    let ctx = canvas.current.getContext(\"2d\");\n    var pos = findPosition(canvas.current);\n    var x = e.pageX - pos.x;\n    var y = e.pageY - pos.y; // var coord = \"x=\" + x + \", y=\" + y;\n\n    var p = ctx.getImageData(x, y, 10, 10).data;\n    var hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n    console.log(hex.substring(1, hex.length - 1));\n\n    if (hex !== \"#000000\") {\n      this.setState({\n        colorMap: this.state.colorMap.add(hex)\n      });\n    }\n\n    console.log(this.state.colorMap);\n  }\n\n  _handleImageChange(e) {\n    e.preventDefault();\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    reader.onloadstart = e => {\n      let ctx = this.canvasRef.current.getContext(\"2d\");\n      ctx.clearRect(0, 0, 240, 240);\n      ctx.fillStyle = 'green';\n      ctx.fillRect(0, 0, 240, 240);\n    };\n\n    reader.onloadend = e => {\n      this.setState({\n        file: file,\n        imagePreviewUrl: reader.result\n      });\n      let i = new Image();\n\n      i.onload = e => {\n        let ctx = this.canvasRef.current.getContext(\"2d\");\n        ctx.fillStyle = 'white';\n        ctx.fillRect(0, 0, 240, 240);\n        ctx.drawImage(i, 0, 0, 240, 240);\n      };\n\n      i.src = this.state.imagePreviewUrl;\n    };\n\n    reader.readAsDataURL(file);\n  }\n\n  render() {\n    let {\n      imagePreviewUrl\n    } = this.state;\n    let $imagePreview = null;\n\n    if (imagePreviewUrl) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewComponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this._handleSubmit(e),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fileInput\",\n            type: \"file\",\n            onChange: e => this._handleImageChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgPreview\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            ref: this.imgRef,\n            height: 240,\n            width: 240,\n            alt: \"img\",\n            src: imagePreviewUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), this._generateCanvas()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    } else {\n      $imagePreview = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewText\",\n        children: \"Please select an Image for Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 30\n      }, this);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previewComponent\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => this._handleSubmit(e),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"fileInput\",\n            type: \"file\",\n            onChange: e => this._handleImageChange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgPreview\",\n          children: $imagePreview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), this._generateCanvas()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/src/components/upload.js"],"names":["React","findPosition","rgbToHex","Uploader","Component","constructor","props","canvasRef","createRef","imgRef","state","file","imagePreviewUrl","colorMap","Set","componentDidMount","img","_generateCanvas","e","_handleFindPosition","_handleSubmit","preventDefault","console","log","canvas","ctx","current","getContext","pos","x","pageX","y","pageY","p","getImageData","data","hex","slice","substring","length","setState","add","_handleImageChange","reader","FileReader","target","files","onloadstart","clearRect","fillStyle","fillRect","onloadend","result","i","Image","onload","drawImage","src","readAsDataURL","render","$imagePreview"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {findPosition, rgbToHex} from \"../util/accessory-helpers\"\n\nexport class Uploader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.imgRef = React.createRef();\n        this.state = {file: '', imagePreviewUrl: '', colorMap: new Set()};\n    }\n\n    componentDidMount() {\n        const img = this.imgRef;\n    }\n\n    _generateCanvas() {\n\n        return (\n            <div>\n                <canvas\n                    onMouseMove={(e) => this._handleFindPosition(e)}\n                    ref={this.canvasRef} width={240} height={240} />\n            </div>\n        )\n    }\n\n    _handleSubmit(e) {\n        e.preventDefault();\n        // TODO: do something with -> this.state.file\n        console.log('handle uploading-', this.state.file);\n    }\n\n    _handleFindPosition(e) {\n        let canvas = this.canvasRef\n        let ctx = canvas.current.getContext(\"2d\");\n        var pos = findPosition(canvas.current);\n        var x = e.pageX - pos.x;\n        var y = e.pageY - pos.y;\n        // var coord = \"x=\" + x + \", y=\" + y;\n        var p = ctx.getImageData(x, y, 10, 10).data;\n        var hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n        console.log(hex.substring(1, hex.length - 1))\n        if (hex !== \"#000000\") {\n            this.setState({\n                colorMap: this.state.colorMap.add(hex)\n            });\n        }\n        console.log(this.state.colorMap);\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadstart = (e) => {\n            let ctx = this.canvasRef.current.getContext(\"2d\");\n            ctx.clearRect(0, 0,240, 240);\n            ctx.fillStyle = 'green';\n            ctx.fillRect(0, 0, 240, 240);\n\n        }\n        reader.onloadend = (e) => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result\n            });\n\n            let i = new Image();\n            i.onload = (e) => {\n                let ctx = this.canvasRef.current.getContext(\"2d\");\n\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, 240, 240);\n                ctx.drawImage(i, 0, 0, 240,240);\n            }\n            i.src = this.state.imagePreviewUrl;\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        let {imagePreviewUrl} = this.state;\n        let $imagePreview = null;\n        if (imagePreviewUrl) {\n\n            return (\n                <div className=\"previewComponent\">\n                    <form onSubmit={(e) => this._handleSubmit(e)}>\n                        <input className=\"fileInput\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                    </form>\n                    <div className=\"imgPreview\">\n                        <img ref={this.imgRef} height={240} width={240} alt={\"img\"} src={imagePreviewUrl}/>\n                    </div>\n                    <br/>\n                    <h4>Canvas</h4>\n                    {this._generateCanvas()}\n                </div>\n            );\n        } else {\n            $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n            return (\n                <div className=\"previewComponent\">\n                    <form onSubmit={(e) => this._handleSubmit(e)}>\n                        <input className=\"fileInput\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                    </form>\n                    <div className=\"imgPreview\">\n                        {$imagePreview}\n                    </div>\n                    <h4>Canvas</h4>\n                    {this._generateCanvas()}\n                </div>\n            );\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}