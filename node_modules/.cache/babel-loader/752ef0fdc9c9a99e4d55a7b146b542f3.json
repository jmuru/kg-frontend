{"ast":null,"code":"var _jsxFileName = \"/Users/josephmuruguru/go/src/github.com/kat-generator/src/components/generate.js\";\nimport React from 'react';\nimport { getKatData } from '../util/dao';\nimport { applyColorPalette, getBackgroundColorMap, redrawFromMatrix } from '../util/generator-helper';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Generator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      Face: {},\n      Accessories: {},\n      Background: {}\n    };\n  }\n\n  _generateKat(e) {\n    e.preventDefault();\n    const data = getKatData();\n    data.then(r => {\n      console.log(\"data in promise\", r);\n      this.setState({\n        Face: r[\"face\"],\n        Accessories: r[\"accessories\"],\n        Background: r[\"background\"]\n      });\n      const face = applyColorPalette(this.state.Face[\"face\"][\"Face\"], this.state.Face[\"palette\"][\"palette\"]);\n      const background = getBackgroundColorMap(this.state.Background[\"background\"][\"Background\"]);\n      const aGroup = {}; // console.log('state accessories', Object.keys(this.state.Accessories))\n\n      Object.keys(this.state.Accessories).forEach(placement => {\n        if (this.state.Accessories[placement]) {\n          // console.log(this.state.Accessories[placement][\"accessory\"][\"accessory\"]);\n          // console.log(this.state.Accessories[placement][\"palette\"][\"palette\"]);\n          aGroup[placement] = applyColorPalette(this.state.Accessories[placement][\"accessory\"][\"accessory\"], this.state.Accessories[placement][\"palette\"][\"palette\"]);\n        }\n      }); // console.log(\"formatted accessories\", aGroup);\n\n      redrawFromMatrix(face, this.canvasRef.current.getContext(\"2d\"));\n    });\n  }\n\n  _generateCanvas() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: this.canvasRef,\n        width: 240,\n        height: 240\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => this._generateKat(e),\n        children: \"Generate Kat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), this._generateCanvas()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/src/components/generate.js"],"names":["React","getKatData","applyColorPalette","getBackgroundColorMap","redrawFromMatrix","Generator","Component","constructor","props","canvasRef","createRef","state","Face","Accessories","Background","_generateKat","e","preventDefault","data","then","r","console","log","setState","face","background","aGroup","Object","keys","forEach","placement","current","getContext","_generateCanvas","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,UAAR,QAAyB,aAAzB;AACA,SAAQC,iBAAR,EAA2BC,qBAA3B,EAAkDC,gBAAlD,QAAyE,0BAAzE;;AAEA,OAAO,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,SAAL,gBAAiBT,KAAK,CAACU,SAAN,EAAjB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,WAAW,EAAE,EAAxB;AAA4BC,MAAAA,UAAU,EAAE;AAAxC,KAAb;AACH;;AACDC,EAAAA,YAAY,CAAEC,CAAF,EAAK;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAGjB,UAAU,EAAvB;AACAiB,IAAAA,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,CAA/B;AACA,WAAKG,QAAL,CAAc;AACVX,QAAAA,IAAI,EAAEQ,CAAC,CAAC,MAAD,CADG;AAEVP,QAAAA,WAAW,EAAEO,CAAC,CAAC,aAAD,CAFJ;AAGVN,QAAAA,UAAU,EAAEM,CAAC,CAAC,YAAD;AAHH,OAAd;AAMA,YAAMI,IAAI,GAAGtB,iBAAiB,CAAC,KAAKS,KAAL,CAAWC,IAAX,CAAgB,MAAhB,EAAwB,MAAxB,CAAD,EAAiC,KAAKD,KAAL,CAAWC,IAAX,CAAgB,SAAhB,EAA2B,SAA3B,CAAjC,CAA9B;AACA,YAAMa,UAAU,GAAGtB,qBAAqB,CAAC,KAAKQ,KAAL,CAAWG,UAAX,CAAsB,YAAtB,EAAoC,YAApC,CAAD,CAAxC;AACA,YAAMY,MAAM,GAAG,EAAf,CAVW,CAWX;;AACAC,MAAAA,MAAM,CAACC,IAAP,CAAY,KAAKjB,KAAL,CAAWE,WAAvB,EAAoCgB,OAApC,CAA4CC,SAAS,IAAI;AACrD,YAAI,KAAKnB,KAAL,CAAWE,WAAX,CAAuBiB,SAAvB,CAAJ,EAAuC;AACnC;AACA;AACAJ,UAAAA,MAAM,CAACI,SAAD,CAAN,GAAoB5B,iBAAiB,CAAC,KAAKS,KAAL,CAAWE,WAAX,CAAuBiB,SAAvB,EAAkC,WAAlC,EAA+C,WAA/C,CAAD,EAA6D,KAAKnB,KAAL,CAAWE,WAAX,CAAuBiB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,CAA7D,CAArC;AACH;AACJ,OAND,EAZW,CAmBX;;AACA1B,MAAAA,gBAAgB,CAACoB,IAAD,EAAO,KAAKf,SAAL,CAAesB,OAAf,CAAuBC,UAAvB,CAAkC,IAAlC,CAAP,CAAhB;AACH,KArBD;AAsBH;;AAEDC,EAAAA,eAAe,GAAG;AACd,wBACI;AAAA,6BACI;AAAQ,QAAA,GAAG,EAAE,KAAKxB,SAAlB;AAA6B,QAAA,KAAK,EAAE,GAApC;AAAyC,QAAA,MAAM,EAAE;AAAjD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAEDyB,EAAAA,MAAM,GAAI;AACN,wBACI;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAGlB,CAAD,IAAO,KAAKD,YAAL,CAAkBC,CAAlB,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKiB,eAAL,EAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAhD0C","sourcesContent":["import React from 'react';\nimport {getKatData} from '../util/dao';\nimport {applyColorPalette, getBackgroundColorMap, redrawFromMatrix} from '../util/generator-helper';\n\nexport class Generator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.state = {Face: {}, Accessories: {}, Background: {}}\n    }\n    _generateKat (e) {\n        e.preventDefault();\n        const data = getKatData();\n        data.then(r => {\n            console.log(\"data in promise\", r);\n            this.setState({\n                Face: r[\"face\"],\n                Accessories: r[\"accessories\"],\n                Background: r[\"background\"]\n            });\n\n            const face = applyColorPalette(this.state.Face[\"face\"][\"Face\"],this.state.Face[\"palette\"][\"palette\"])\n            const background = getBackgroundColorMap(this.state.Background[\"background\"][\"Background\"])\n            const aGroup = {}\n            // console.log('state accessories', Object.keys(this.state.Accessories))\n            Object.keys(this.state.Accessories).forEach(placement => {\n                if (this.state.Accessories[placement]) {\n                    // console.log(this.state.Accessories[placement][\"accessory\"][\"accessory\"]);\n                    // console.log(this.state.Accessories[placement][\"palette\"][\"palette\"]);\n                    aGroup[placement] = applyColorPalette(this.state.Accessories[placement][\"accessory\"][\"accessory\"],this.state.Accessories[placement][\"palette\"][\"palette\"] )\n                }\n            });\n            // console.log(\"formatted accessories\", aGroup);\n            redrawFromMatrix(face, this.canvasRef.current.getContext(\"2d\"))\n        })\n    }\n\n    _generateCanvas() {\n        return (\n            <div>\n                <canvas ref={this.canvasRef} width={240} height={240} />\n            </div>\n        )\n    }\n\n    render () {\n        return (\n            <div>\n                <button onClick={(e) => this._generateKat(e)}>Generate Kat</button>\n                {this._generateCanvas()}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}