{"ast":null,"code":"export function findPosition(obj) {\n  let curleft = 0,\n      curtop = 0;\n\n  if (obj.offsetParent) {\n    do {\n      curleft += obj.offsetLeft;\n      curtop += obj.offsetTop;\n    } while (obj = obj.offsetParent);\n\n    return {\n      x: curleft,\n      y: curtop\n    };\n  }\n\n  return undefined;\n}\nexport function rgbToHex(r, g, b) {\n  if (r > 255 || g > 255 || b > 255) throw \"Invalid color component\";\n  return (r << 16 | g << 8 | b).toString(16);\n}\nexport function buildEmptyMatrix(height) {\n  var m = [];\n\n  for (var i = 0; i < height; i++) {\n    m.push([]);\n  }\n\n  return m;\n}\nexport function recordMappingMatrix(colorMap) {\n  var colorMatrix = buildEmptyMatrix(24);\n  var ex = document.getElementById('example2');\n  var context = ex.getContext('2d');\n\n  for (var height = 0; height < 24; height++) {\n    for (let index = 0; index < 24; index++) {\n      var w = index * 10;\n      var h = height * 10;\n      var p = context.getImageData(w, h, 9, 9).data;\n      var hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n\n      switch (hex) {\n        case hex === '#000000':\n          colorMatrix[height][index] = \"outline\";\n          break;\n\n        case hex === '#fffff':\n          colorMatrix[height][index] = \"empty\";\n          break;\n\n        default:\n          colorMatrix[height][index] = \"\";\n      }\n\n      if (hex === \"#000000\") {\n        colorMatrix[height][index] = \"empty\";\n      } else {\n        colorMatrix[height][index] = \"empty\";\n      }\n    }\n  }\n\n  return colorMatrix;\n}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/src/util/accessory-helpers.js"],"names":["findPosition","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","x","y","undefined","rgbToHex","r","g","b","toString","buildEmptyMatrix","height","m","i","push","recordMappingMatrix","colorMap","colorMatrix","ex","document","getElementById","context","getContext","index","w","h","p","getImageData","data","hex","slice"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AAC9B,MAAIC,OAAO,GAAG,CAAd;AAAA,MAAiBC,MAAM,GAAG,CAA1B;;AACA,MAAIF,GAAG,CAACG,YAAR,EAAsB;AAClB,OAAG;AACCF,MAAAA,OAAO,IAAID,GAAG,CAACI,UAAf;AACAF,MAAAA,MAAM,IAAIF,GAAG,CAACK,SAAd;AACH,KAHD,QAGSL,GAAG,GAAGA,GAAG,CAACG,YAHnB;;AAIA,WAAO;AAAEG,MAAAA,CAAC,EAAEL,OAAL;AAAcM,MAAAA,CAAC,EAAEL;AAAjB,KAAP;AACH;;AACD,SAAOM,SAAP;AACH;AAED,OAAO,SAAUC,QAAV,CAAmBC,CAAnB,EAAqBC,CAArB,EAAuBC,CAAvB,EAA0B;AAC7B,MAAIF,CAAC,GAAG,GAAJ,IAAWC,CAAC,GAAG,GAAf,IAAsBC,CAAC,GAAG,GAA9B,EACI,MAAM,yBAAN;AACJ,SAAO,CAAEF,CAAC,IAAI,EAAN,GAAaC,CAAC,IAAI,CAAlB,GAAuBC,CAAxB,EAA2BC,QAA3B,CAAoC,EAApC,CAAP;AACH;AAED,OAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AACrC,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC7BD,IAAAA,CAAC,CAACE,IAAF,CAAO,EAAP;AACH;;AACD,SAAOF,CAAP;AACH;AAED,OAAO,SAASG,mBAAT,CAA6BC,QAA7B,EAAuC;AAC1C,MAAIC,WAAW,GAAGP,gBAAgB,CAAC,EAAD,CAAlC;AACA,MAAIQ,EAAE,GAAGC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,CAAT;AACA,MAAIC,OAAO,GAAGH,EAAE,CAACI,UAAH,CAAc,IAAd,CAAd;;AACA,OAAK,IAAIX,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,EAA9B,EAAkCA,MAAM,EAAxC,EAA4C;AACxC,SAAK,IAAIY,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACrC,UAAIC,CAAC,GAAGD,KAAK,GAAG,EAAhB;AACA,UAAIE,CAAC,GAAGd,MAAM,GAAG,EAAjB;AAEA,UAAIe,CAAC,GAAGL,OAAO,CAACM,YAAR,CAAqBH,CAArB,EAAwBC,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCG,IAAzC;AACA,UAAIC,GAAG,GAAG,MAAM,CAAC,WAAWxB,QAAQ,CAACqB,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAApB,EAAwCI,KAAxC,CAA8C,CAAC,CAA/C,CAAhB;;AACA,cAAQD,GAAR;AACI,aAAKA,GAAG,KAAK,SAAb;AACIZ,UAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBY,KAApB,IAA6B,SAA7B;AACA;;AACJ,aAAKM,GAAG,KAAK,QAAb;AACIZ,UAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBY,KAApB,IAA6B,OAA7B;AACA;;AACJ;AACIN,UAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBY,KAApB,IAA6B,EAA7B;AARR;;AAUA,UAAIM,GAAG,KAAK,SAAZ,EAAuB;AACnBZ,QAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBY,KAApB,IAA6B,OAA7B;AAEH,OAHD,MAGO;AACHN,QAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBY,KAApB,IAA6B,OAA7B;AACH;AACJ;AACJ;;AACD,SAAON,WAAP;AACH","sourcesContent":["export function findPosition(obj) {\n    let curleft = 0, curtop = 0;\n    if (obj.offsetParent) {\n        do {\n            curleft += obj.offsetLeft;\n            curtop += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n        return { x: curleft, y: curtop };\n    }\n    return undefined;\n}\n\nexport function  rgbToHex(r,g,b) {\n    if (r > 255 || g > 255 || b > 255)\n        throw \"Invalid color component\";\n    return ((r << 16) | (g << 8) | b).toString(16);\n}\n\nexport function buildEmptyMatrix(height) {\n    var m = [];\n    for (var i = 0; i < height; i++) {\n        m.push([]);\n    }\n    return m\n}\n\nexport function recordMappingMatrix(colorMap) {\n    var colorMatrix = buildEmptyMatrix(24);\n    var ex = document.getElementById('example2');\n    var context = ex.getContext('2d');\n    for (var height = 0; height < 24; height++ ){\n        for (let index = 0; index < 24; index++) {\n            var w = index * 10;\n            var h = height * 10\n\n            var p = context.getImageData(w, h, 9, 9).data;\n            var hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n            switch (hex) {\n                case hex === '#000000':\n                    colorMatrix[height][index] = \"outline\";\n                    break;\n                case hex === '#fffff':\n                    colorMatrix[height][index] = \"empty\";\n                    break;\n                default:\n                    colorMatrix[height][index] = \"\";\n            }\n            if (hex === \"#000000\") {\n                colorMatrix[height][index] = \"empty\";\n\n            } else {\n                colorMatrix[height][index] = \"empty\";\n            }\n        }\n    }\n    return colorMatrix;\n}"]},"metadata":{},"sourceType":"module"}