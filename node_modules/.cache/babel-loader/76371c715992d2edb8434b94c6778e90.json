{"ast":null,"code":"export function findPosition(obj) {\n  let curleft = 0,\n      curtop = 0;\n\n  if (obj.offsetParent) {\n    do {\n      curleft += obj.offsetLeft;\n      curtop += obj.offsetTop;\n    } while (obj = obj.offsetParent);\n\n    return {\n      x: curleft,\n      y: curtop\n    };\n  }\n\n  return undefined;\n}\nexport function rgbToHex(r, g, b) {\n  if (r > 255 || g > 255 || b > 255) throw \"Invalid color component\";\n  return (r << 16 | g << 8 | b).toString(16);\n}\n\nfunction buildEmptyMatrix(height) {\n  var m = [];\n\n  for (var i = 0; i < height; i++) {\n    m.push([]);\n  }\n\n  return m;\n}\n\nexport function recordMappingMatrix(canvas) {\n  let colorMatrix = buildEmptyMatrix(24);\n  let context = canvas.getContext('2d');\n\n  for (let height = 0; height < 24; height++) {\n    for (let index = 0; index < 24; index++) {\n      let w = index * 10;\n      let h = height * 10;\n      let p = context.getImageData(w, h, 9, 9).data;\n      let hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n\n      switch (hex) {\n        case \"#000000\":\n          colorMatrix[height][index] = \"outline\";\n          break;\n\n        case \"#ffffff\":\n          colorMatrix[height][index] = \"empty\";\n          break;\n\n        default:\n          colorMatrix[height][index] = `color_${hex}`;\n          break;\n      }\n    }\n  }\n\n  return colorMatrix;\n}","map":{"version":3,"sources":["/Users/josephmuruguru/go/src/github.com/kat-generator/KGF/src/util/accessory-helpers.js"],"names":["findPosition","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","x","y","undefined","rgbToHex","r","g","b","toString","buildEmptyMatrix","height","m","i","push","recordMappingMatrix","canvas","colorMatrix","context","getContext","index","w","h","p","getImageData","data","hex","slice"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AAC9B,MAAIC,OAAO,GAAG,CAAd;AAAA,MAAiBC,MAAM,GAAG,CAA1B;;AACA,MAAIF,GAAG,CAACG,YAAR,EAAsB;AAClB,OAAG;AACCF,MAAAA,OAAO,IAAID,GAAG,CAACI,UAAf;AACAF,MAAAA,MAAM,IAAIF,GAAG,CAACK,SAAd;AACH,KAHD,QAGSL,GAAG,GAAGA,GAAG,CAACG,YAHnB;;AAIA,WAAO;AAAEG,MAAAA,CAAC,EAAEL,OAAL;AAAcM,MAAAA,CAAC,EAAEL;AAAjB,KAAP;AACH;;AACD,SAAOM,SAAP;AACH;AAED,OAAO,SAAUC,QAAV,CAAmBC,CAAnB,EAAqBC,CAArB,EAAuBC,CAAvB,EAA0B;AAC7B,MAAIF,CAAC,GAAG,GAAJ,IAAWC,CAAC,GAAG,GAAf,IAAsBC,CAAC,GAAG,GAA9B,EACI,MAAM,yBAAN;AACJ,SAAO,CAAEF,CAAC,IAAI,EAAN,GAAaC,CAAC,IAAI,CAAlB,GAAuBC,CAAxB,EAA2BC,QAA3B,CAAoC,EAApC,CAAP;AACH;;AAED,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9B,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAApB,EAA4BE,CAAC,EAA7B,EAAiC;AAC7BD,IAAAA,CAAC,CAACE,IAAF,CAAO,EAAP;AACH;;AACD,SAAOF,CAAP;AACH;;AAED,OAAO,SAASG,mBAAT,CAA6BC,MAA7B,EAAqC;AACxC,MAAIC,WAAW,GAAGP,gBAAgB,CAAC,EAAD,CAAlC;AACA,MAAIQ,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAd;;AACA,OAAK,IAAIR,MAAM,GAAG,CAAlB,EAAqBA,MAAM,GAAG,EAA9B,EAAkCA,MAAM,EAAxC,EAA4C;AACxC,SAAK,IAAIS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACrC,UAAIC,CAAC,GAAGD,KAAK,GAAG,EAAhB;AACA,UAAIE,CAAC,GAAGX,MAAM,GAAG,EAAjB;AAEA,UAAIY,CAAC,GAAGL,OAAO,CAACM,YAAR,CAAqBH,CAArB,EAAwBC,CAAxB,EAA2B,CAA3B,EAA8B,CAA9B,EAAiCG,IAAzC;AACA,UAAIC,GAAG,GAAG,MAAM,CAAC,WAAWrB,QAAQ,CAACkB,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,EAAaA,CAAC,CAAC,CAAD,CAAd,CAApB,EAAwCI,KAAxC,CAA8C,CAAC,CAA/C,CAAhB;;AACA,cAAQD,GAAR;AACI,aAAK,SAAL;AACIT,UAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBS,KAApB,IAA6B,SAA7B;AACA;;AACJ,aAAK,SAAL;AACIH,UAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBS,KAApB,IAA6B,OAA7B;AACA;;AACJ;AACIH,UAAAA,WAAW,CAACN,MAAD,CAAX,CAAoBS,KAApB,IAA8B,SAAQM,GAAI,EAA1C;AACA;AATR;AAWH;AACJ;;AACD,SAAOT,WAAP;AACH","sourcesContent":["export function findPosition(obj) {\n    let curleft = 0, curtop = 0;\n    if (obj.offsetParent) {\n        do {\n            curleft += obj.offsetLeft;\n            curtop += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n        return { x: curleft, y: curtop };\n    }\n    return undefined;\n}\n\nexport function  rgbToHex(r,g,b) {\n    if (r > 255 || g > 255 || b > 255)\n        throw \"Invalid color component\";\n    return ((r << 16) | (g << 8) | b).toString(16);\n}\n\nfunction buildEmptyMatrix(height) {\n    var m = [];\n    for (var i = 0; i < height; i++) {\n        m.push([]);\n    }\n    return m\n}\n\nexport function recordMappingMatrix(canvas) {\n    let colorMatrix = buildEmptyMatrix(24);\n    let context = canvas.getContext('2d');\n    for (let height = 0; height < 24; height++ ){\n        for (let index = 0; index < 24; index++) {\n            let w = index * 10;\n            let h = height * 10\n\n            let p = context.getImageData(w, h, 9, 9).data;\n            let hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n            switch (hex) {\n                case \"#000000\":\n                    colorMatrix[height][index] = \"outline\";\n                    break;\n                case \"#ffffff\":\n                    colorMatrix[height][index] = \"empty\";\n                    break;\n                default:\n                    colorMatrix[height][index] = `color_${hex}`;\n                    break;\n            }\n        }\n    }\n    return colorMatrix;\n}"]},"metadata":{},"sourceType":"module"}