{"version":3,"sources":["util/accessory-helpers.js","util/dao.js","components/upload.js","routes/CreateAccessory.js","util/generator-helper.js","components/generate.js","routes/GenerateKat.js","App.js","reportWebVitals.js","index.js"],"names":["rgbToHex","r","g","b","toString","a","axios","get","response","console","log","status","data","Uploader","props","canvasRef","React","createRef","imgRef","state","file","imagePreviewUrl","colorMap","placement","subType","this","onMouseMove","e","_handleFindPosition","ref","width","height","canvas","mapping","colorMatrix","m","i","push","buildEmptyMatrix","context","getContext","index","w","h","p","getImageData","hex","slice","recordMappingMatrix","current","forEach","row","setState","subtype","aData","url","window","confirm","post","accessory","postAccessoryData","alert","target","value","preventDefault","ctx","pos","obj","curleft","curtop","offsetParent","offsetLeft","offsetTop","x","y","findPosition","pageX","pageY","reader","FileReader","files","onloadstart","clearRect","onloadend","result","Image","onload","fillStyle","fillRect","drawImage","src","readAsDataURL","$imagePreview","className","onSubmit","_handleSubmit","type","onChange","_handleImageChange","alt","_generateCanvas","onClick","_scanCanvas","id","_handleSubTypeChange","_handlePlacementChange","map","el","_saveAccessory","Component","CreateAccessory","applyColorPalette","palette","paletteMap","paletteCopy","length","hasOwnProperty","Math","floor","random","rIndex","getRandomColorFromPalette","splice","pMap","final","transformRow","applyColorMap","mergeLayers","source","edit","start","j","Generator","Face","Accessories","Background","Merged","ImgData","getKatData","then","face","background","bg","getBackgroundColorMap","aGroup","Object","keys","base","values","reduce","acc","curr","combo","canvasContext","redrawFromMatrix","imgData","toDataURL","_generateKat","href","download","GenerateKat","Home","App","to","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9011ba5a.chunk.js","sourcesContent":["export function findPosition(obj) {\n    let curleft = 0, curtop = 0;\n    if (obj.offsetParent) {\n        do {\n            curleft += obj.offsetLeft;\n            curtop += obj.offsetTop;\n        } while (obj = obj.offsetParent);\n        return { x: curleft, y: curtop };\n    }\n    return undefined;\n}\n\nexport function  rgbToHex(r,g,b) {\n    if (r > 255 || g > 255 || b > 255)\n        throw \"Invalid color component\";\n    return ((r << 16) | (g << 8) | b).toString(16);\n}\n\nfunction buildEmptyMatrix(height) {\n    var m = [];\n    for (var i = 0; i < height; i++) {\n        m.push([]);\n    }\n    return m\n}\n\nexport function recordMappingMatrix(canvas) {\n    let colorMatrix = buildEmptyMatrix(24);\n    let context = canvas.getContext('2d');\n    for (let height = 0; height < 24; height++ ){\n        for (let index = 0; index < 24; index++) {\n            let w = index * 10;\n            let h = height * 10\n\n            let p = context.getImageData(w, h, 9, 9).data;\n            let hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n            switch (hex) {\n                case \"#000000\":\n                    colorMatrix[height][index] = \"outline\";\n                    break;\n                case \"#ffffff\":\n                    colorMatrix[height][index] = \"empty\";\n                    break;\n                default:\n                    colorMatrix[height][index] = `color_${hex}`;\n                    break;\n            }\n        }\n    }\n    return colorMatrix;\n}","import axios from 'axios';\n\nconst SERVER_URL_BASE = \"\";\n\nexport function postAccessoryData (placement, subType, aData) {\n    const url = `${SERVER_URL_BASE}/accessory/create`\n    if (window.confirm(`Are you sure you eant to save this accessory as sub type ${subType} and placement ${placement}`)) {\n        axios.post(url,{\n            placement: placement,\n            subType: subType,\n            accessory: aData\n        });\n    }\n\n}\n\nexport async function getKatData () {\n    const url = `/api/generate/kat`;\n    const response = await axios.get(url);\n    console.log(\"generate cat response status\", response.status);\n    return response.data;\n}\n","import React from \"react\";\nimport {findPosition, rgbToHex, recordMappingMatrix} from \"../util/accessory-helpers\";\nimport {postAccessoryData} from \"../util/dao\";\n\nexport class Uploader extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.imgRef = React.createRef();\n        this.state = {file: '', imagePreviewUrl: '', colorMap: {}, placement: '', subType: ''};\n    }\n\n    componentDidMount() {\n        const img = this.imgRef;\n    }\n\n    _generateCanvas() {\n        return (\n            <div>\n                <canvas\n                    onMouseMove={(e) => this._handleFindPosition(e)}\n                    ref={this.canvasRef} width={240} height={240} />\n            </div>\n        )\n    }\n\n    _scanCanvas() {\n        let canvas = this.canvasRef;\n        let mapping = {}\n        const matrix = recordMappingMatrix(canvas.current);\n        matrix.forEach((row, index) => {\n            mapping[index] = row;\n        })\n        this.setState({\n            colorMap: mapping\n        });\n        console.log(mapping);\n    }\n\n    _saveAccessory() {\n        if (this.state.placement !== \"\" && this.state.subtype !== \"\" && this.state.colorMap !== {}) {\n            postAccessoryData(this.state.placement, this.state.subType, this.state.colorMap)\n        } else {\n            alert(\"unable to save accessory plz review configuration\");\n        }\n\n    }\n\n\n\n    _handlePlacementChange(e) {\n        this.setState({\n            placement: e.target.value\n        })\n    }\n\n    _handleSubTypeChange(e) {\n        this.setState({\n            subType: e.target.value,\n        })\n    }\n\n    _handleSubmit(e) {\n        e.preventDefault();\n        // TODO: do something with -> this.state.file\n        console.log('handle uploading-', this.state.file);\n    }\n\n    _handleFindPosition(e) {\n        let canvas = this.canvasRef;\n        let ctx = canvas.current.getContext(\"2d\");\n        var pos = findPosition(canvas.current);\n        var x = e.pageX - pos.x;\n        var y = e.pageY - pos.y;\n        var p = ctx.getImageData(x, y, 10, 10).data;\n        var hex = \"#\" + (\"000000\" + rgbToHex(p[0], p[1], p[2])).slice(-6);\n        console.log(hex);\n    }\n\n    _handleImageChange(e) {\n        e.preventDefault();\n\n        let reader = new FileReader();\n        let file = e.target.files[0];\n        reader.onloadstart = (e) => {\n            let ctx = this.canvasRef.current.getContext(\"2d\");\n            ctx.clearRect(0, 0,240, 240);\n        }\n        reader.onloadend = (e) => {\n            this.setState({\n                file: file,\n                imagePreviewUrl: reader.result,\n                colorMap: {},\n                placement: \"\",\n                subType: \"\",\n            });\n\n            let i = new Image();\n            i.onload = (e) => {\n                let ctx = this.canvasRef.current.getContext(\"2d\");\n\n                ctx.fillStyle = 'white';\n                ctx.fillRect(0, 0, 240, 240);\n                ctx.drawImage(i, 0, 0, 240,240);\n            }\n            i.src = this.state.imagePreviewUrl;\n        }\n\n        reader.readAsDataURL(file)\n    }\n\n    render() {\n        let {imagePreviewUrl} = this.state;\n        let $imagePreview = null;\n        if (imagePreviewUrl) {\n\n            return (\n                <div className=\"previewComponent\">\n                    <form onSubmit={(e) => this._handleSubmit(e)}>\n                        <input className=\"fileInput\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                    </form>\n                    <div className=\"imgPreview\">\n                        <img ref={this.imgRef} height={240} width={240} alt={\"img\"} src={imagePreviewUrl}/>\n                    </div>\n                    <br/>\n                    <h4>Canvas</h4>\n                    {this._generateCanvas()}\n                    <br/>\n                    <button onClick={() => this._scanCanvas()}>scan</button>\n                    <br />\n                    <form id=\"save-accessory\">\n                        <label>enter subtype</label>\n                        <input className={\"subtype-input\"} type={\"text\"} value={this.state.subType} onChange={(e) => this._handleSubTypeChange(e)} />\n                        <br />\n                        <label>choose placement</label>\n                        <select value={this.state.placement} onChange={(e) => this._handlePlacementChange(e)}>\n                            <option value=\"\">Select your option</option>\n                            {\n                                [\"top\", \"mid\", \"bottom\", \"custom\"].map((el, i) => {\n                                    return (<option value={el} key={`${i}_option`}>{el}</option>)\n                                })\n                            }\n                        </select>\n                    </form>\n                    <button onClick={(e) => this._saveAccessory(e)} >Save Accessory</button>\n                </div>\n            );\n        } else {\n            $imagePreview = (<div className=\"previewText\">Please select an Image for Preview</div>);\n            return (\n                <div className=\"previewComponent\">\n                    <form onSubmit={(e) => this._handleSubmit(e)}>\n                        <input className=\"fileInput\"\n                               type=\"file\"\n                               onChange={(e) => this._handleImageChange(e)}/>\n                    </form>\n                    <div className=\"imgPreview\">\n                        {$imagePreview}\n                    </div>\n                    <h4>Canvas</h4>\n                    {this._generateCanvas()}\n                </div>\n            );\n        }\n    }\n}\n","import React from \"react\";\nimport {Uploader} from \"../components/upload\";\n\nexport class CreateAccessory extends React.Component {\n    render() {\n        return ( <div>\n                <h1>Create Accessory</h1>\n                <Uploader></Uploader>\n            </div>\n        );\n\n    }\n}","export function applyColorPalette(mapping, palette) {\n    if (!mapping) {\n        return [];\n    }\n    let paletteMap = {};\n    paletteMap[\"empty\"] = \"#ffffff\";\n    paletteMap[\"outline\"] = \"#000000\";\n    let paletteCopy = palette;\n    let colorMapping = [];\n    for (let i = 0; i < 24; i++) {\n        const currentRow = mapping[i];\n        currentRow.forEach(el => {\n            if (!paletteCopy.length && !paletteMap.hasOwnProperty(el)) {\n                paletteMap[el] = `#${Math.floor(Math.random()*16777215).toString(16)}`;\n            }\n            if (paletteMap.hasOwnProperty(el)) {\n            } else {\n                let rIndex = getRandomColorFromPalette(paletteCopy)\n                paletteMap[el] = `#${paletteCopy[rIndex]}`;\n                paletteCopy.splice(rIndex, 1);\n            }\n        });\n    }\n    colorMapping = applyColorMap(mapping, paletteMap);\n    return colorMapping;\n}\n\nfunction getRandomColorFromPalette(palette) {\n    let length = palette.length;\n    return Math.floor(Math.random() * length);\n}\n\nfunction applyColorMap(map, pMap) {\n    let final = [];\n    for (let i = 0; i < 24; i++) {\n        let transformRow = map[i].map(el => {\n            return pMap[el];\n        })\n        final.push(transformRow);\n    }\n    return final\n}\n\nexport function getBackgroundColorMap(bg) {\n    const mapping = [];\n    for (let i = 0; i < 24; i++) {\n        mapping.push(bg[i])\n    }\n    return mapping;\n}\n\nexport function mergeLayers(source, edit) {\n    if (edit.length < 24) {\n        return source;\n    }\n    let start = source;\n    for (let index = 0; index < source.length; index++) {\n        for (let j = 0; j < source.length; j++) {\n            if (edit[index][j] == \"#ffffff\") {\n                continue;\n            } else {\n                start[index][j] = edit[index][j];\n            }\n        }\n    }\n    return start;\n}\n\nexport function redrawFromMatrix(colorMatrix, canvasContext) {\n    for (var height = 0; height < 24; height++ ){\n        for (let index = 0; index < 24; index++) {\n            if (colorMatrix[height][index] === \"#ffffff\") {\n                canvasContext.fillStyle = \"#ffffff\";\n            } else {\n                canvasContext.fillStyle = colorMatrix[height][index]\n            }\n            var w = index * 10;\n            var h = height * 10\n            canvasContext.fillRect(w, h, 10, 10);\n        }\n    }\n}","import React from 'react';\nimport {getKatData} from '../util/dao';\nimport {applyColorPalette, getBackgroundColorMap, redrawFromMatrix, mergeLayers} from '../util/generator-helper';\n\nexport class Generator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.canvasRef = React.createRef();\n        this.state = {Face: {}, Accessories: {}, Background: {}, Merged: null, ImgData: null}\n    }\n    _generateKat (e) {\n        e.preventDefault();\n        const data = getKatData();\n        data.then(r => {\n            console.log(\"data in promise\", r);\n            this.setState({\n                Face: r[\"face\"],\n                Accessories: r[\"accessories\"],\n                Background: r[\"background\"]\n            });\n\n            const face = applyColorPalette(this.state.Face[\"face\"][\"Face\"],this.state.Face[\"palette\"][\"palette\"])\n            const background = getBackgroundColorMap(this.state.Background[\"background\"][\"Background\"])\n            const aGroup = {}\n            // console.log('state accessories', Object.keys(this.state.Accessories))\n            Object.keys(this.state.Accessories).forEach(placement => {\n                if (this.state.Accessories[placement]) {\n                    // console.log(this.state.Accessories[placement][\"accessory\"][\"accessory\"]);\n                    // console.log(this.state.Accessories[placement][\"palette\"][\"palette\"]);\n                    aGroup[placement] = applyColorPalette(this.state.Accessories[placement][\"accessory\"][\"accessory\"],this.state.Accessories[placement][\"palette\"][\"palette\"] )\n                }\n            });\n            // console.log(\"formatted accessories\", aGroup);\n            let base = mergeLayers(background, face);\n            let a = Object.values(aGroup).reduce((acc, curr) => {\n                return mergeLayers(acc, curr);\n            })\n            let combo = mergeLayers(base, a)\n            redrawFromMatrix(combo, this.canvasRef.current.getContext(\"2d\"));\n\n            let imgData = this.canvasRef.current.toDataURL(\"image/png\");\n            console.log(\"converted image data\", imgData);\n            this.setState({\n                Merged: combo,\n                ImgData: imgData\n            })\n        })\n    }\n\n    _generateCanvas() {\n        return (\n            <div>\n                <canvas ref={this.canvasRef} width={240} height={240} />\n            </div>\n        )\n    }\n\n    render () {\n        return (\n            <div>\n                <button onClick={(e) => this._generateKat(e)}>Generate Kat</button>\n                {this._generateCanvas()}\n                <br/>\n                {this.state.Merged && this.state.ImgData ? <a href={this.state.ImgData} download>Download Kat</a> : null}\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport {Generator} from \"../components/generate\";\n\nexport class GenerateKat extends React.Component {\n    render() {\n        return ( <div>\n                <h1>Generate Kat</h1>\n                <Generator></Generator>\n            </div>\n        );\n\n    }\n}","import './App.css';\nimport React from \"react\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {CreateAccessory} from \"./routes/CreateAccessory\";\nimport {GenerateKat} from \"./routes/GenerateKat\"\n\nfunction App() {\n  return (\n      <Router>\n        <div>\n          <nav>\n            <ul>\n              <li>\n                <Link to=\"/\">Home</Link>\n              </li>\n              <li>\n                <Link to=\"/create/accessory\">Create Accessory</Link>\n              </li>\n              <li>\n                <Link to=\"/generate/kat\">Create Kat</Link>\n              </li>\n            </ul>\n          </nav>\n\n          {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n          <Switch>\n            <Route path=\"/generate/kat\">\n              <GenerateKat />\n            </Route>\n            <Route path=\"/create/accessory\">\n              <CreateAccessory />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n  );\n}\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}